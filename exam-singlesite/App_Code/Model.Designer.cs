//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ExamDbModel", "FK_Chapter_Subject", "Subject", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ExamDbModel.Subject), "Chapter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExamDbModel.Chapter), true)]
[assembly: EdmRelationshipAttribute("ExamDbModel", "FK_Question_Chapter", "Chapter", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ExamDbModel.Chapter), "Question", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExamDbModel.Question), true)]
[assembly: EdmRelationshipAttribute("ExamDbModel", "FK_ExamMaster_Subject", "Subject", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ExamDbModel.Subject), "ExamMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExamDbModel.ExamMaster), true)]
[assembly: EdmRelationshipAttribute("ExamDbModel", "FK_ExamRegistration_ExamMaster", "ExamMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ExamDbModel.ExamMaster), "ExamRegistration", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExamDbModel.ExamRegistration), true)]
[assembly: EdmRelationshipAttribute("ExamDbModel", "FK_ExamRegistration_ExamRegistration", "Login", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ExamDbModel.Login), "ExamRegistration", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExamDbModel.ExamRegistration), true)]
[assembly: EdmRelationshipAttribute("ExamDbModel", "FK_StudentExamQuestions_ExamRegistration", "ExamRegistration", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExamDbModel.ExamRegistration), "StudentExamQuestions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExamDbModel.StudentExamQuestion), true)]
[assembly: EdmRelationshipAttribute("ExamDbModel", "FK_QuestionBlanks_Question", "Question", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExamDbModel.Question), "QuestionBlanks", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ExamDbModel.QuestionBlank), true)]
[assembly: EdmRelationshipAttribute("ExamDbModel", "FK_QuestionBool_Question", "Question", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExamDbModel.Question), "QuestionBool", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ExamDbModel.QuestionBool), true)]
[assembly: EdmRelationshipAttribute("ExamDbModel", "FK_QuestionMcq_Question", "Question", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExamDbModel.Question), "QuestionMcq", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ExamDbModel.QuestionMcq), true)]
[assembly: EdmRelationshipAttribute("ExamDbModel", "FK_StudentExamQuestions_Question", "Question", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExamDbModel.Question), "StudentExamQuestions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExamDbModel.StudentExamQuestion), true)]

#endregion

namespace ExamDbModel
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ExamDbEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ExamDbEntities object using the connection string found in the 'ExamDbEntities' section of the application configuration file.
        /// </summary>
        public ExamDbEntities() : base("name=ExamDbEntities", "ExamDbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ExamDbEntities object.
        /// </summary>
        public ExamDbEntities(string connectionString) : base(connectionString, "ExamDbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ExamDbEntities object.
        /// </summary>
        public ExamDbEntities(EntityConnection connection) : base(connection, "ExamDbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Chapter> Chapters
        {
            get
            {
                if ((_Chapters == null))
                {
                    _Chapters = base.CreateObjectSet<Chapter>("Chapters");
                }
                return _Chapters;
            }
        }
        private ObjectSet<Chapter> _Chapters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ExamMaster> ExamMasters
        {
            get
            {
                if ((_ExamMasters == null))
                {
                    _ExamMasters = base.CreateObjectSet<ExamMaster>("ExamMasters");
                }
                return _ExamMasters;
            }
        }
        private ObjectSet<ExamMaster> _ExamMasters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ExamRegistration> ExamRegistrations
        {
            get
            {
                if ((_ExamRegistrations == null))
                {
                    _ExamRegistrations = base.CreateObjectSet<ExamRegistration>("ExamRegistrations");
                }
                return _ExamRegistrations;
            }
        }
        private ObjectSet<ExamRegistration> _ExamRegistrations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Login> Logins
        {
            get
            {
                if ((_Logins == null))
                {
                    _Logins = base.CreateObjectSet<Login>("Logins");
                }
                return _Logins;
            }
        }
        private ObjectSet<Login> _Logins;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Question> Questions
        {
            get
            {
                if ((_Questions == null))
                {
                    _Questions = base.CreateObjectSet<Question>("Questions");
                }
                return _Questions;
            }
        }
        private ObjectSet<Question> _Questions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<QuestionBlank> QuestionBlanks
        {
            get
            {
                if ((_QuestionBlanks == null))
                {
                    _QuestionBlanks = base.CreateObjectSet<QuestionBlank>("QuestionBlanks");
                }
                return _QuestionBlanks;
            }
        }
        private ObjectSet<QuestionBlank> _QuestionBlanks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<QuestionBool> QuestionBools
        {
            get
            {
                if ((_QuestionBools == null))
                {
                    _QuestionBools = base.CreateObjectSet<QuestionBool>("QuestionBools");
                }
                return _QuestionBools;
            }
        }
        private ObjectSet<QuestionBool> _QuestionBools;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<QuestionMcq> QuestionMcqs
        {
            get
            {
                if ((_QuestionMcqs == null))
                {
                    _QuestionMcqs = base.CreateObjectSet<QuestionMcq>("QuestionMcqs");
                }
                return _QuestionMcqs;
            }
        }
        private ObjectSet<QuestionMcq> _QuestionMcqs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StudentExamQuestion> StudentExamQuestions
        {
            get
            {
                if ((_StudentExamQuestions == null))
                {
                    _StudentExamQuestions = base.CreateObjectSet<StudentExamQuestion>("StudentExamQuestions");
                }
                return _StudentExamQuestions;
            }
        }
        private ObjectSet<StudentExamQuestion> _StudentExamQuestions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Subject> Subjects
        {
            get
            {
                if ((_Subjects == null))
                {
                    _Subjects = base.CreateObjectSet<Subject>("Subjects");
                }
                return _Subjects;
            }
        }
        private ObjectSet<Subject> _Subjects;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Chapters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChapters(Chapter chapter)
        {
            base.AddObject("Chapters", chapter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ExamMasters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExamMasters(ExamMaster examMaster)
        {
            base.AddObject("ExamMasters", examMaster);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ExamRegistrations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExamRegistrations(ExamRegistration examRegistration)
        {
            base.AddObject("ExamRegistrations", examRegistration);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Logins EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLogins(Login login)
        {
            base.AddObject("Logins", login);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Questions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuestions(Question question)
        {
            base.AddObject("Questions", question);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the QuestionBlanks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuestionBlanks(QuestionBlank questionBlank)
        {
            base.AddObject("QuestionBlanks", questionBlank);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the QuestionBools EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuestionBools(QuestionBool questionBool)
        {
            base.AddObject("QuestionBools", questionBool);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the QuestionMcqs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuestionMcqs(QuestionMcq questionMcq)
        {
            base.AddObject("QuestionMcqs", questionMcq);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StudentExamQuestions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStudentExamQuestions(StudentExamQuestion studentExamQuestion)
        {
            base.AddObject("StudentExamQuestions", studentExamQuestion);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Subjects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubjects(Subject subject)
        {
            base.AddObject("Subjects", subject);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExamDbModel", Name="Chapter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Chapter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Chapter object.
        /// </summary>
        /// <param name="chapterID">Initial value of the ChapterID property.</param>
        public static Chapter CreateChapter(global::System.Int32 chapterID)
        {
            Chapter chapter = new Chapter();
            chapter.ChapterID = chapterID;
            return chapter;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChapterID
        {
            get
            {
                return _ChapterID;
            }
            set
            {
                if (_ChapterID != value)
                {
                    OnChapterIDChanging(value);
                    ReportPropertyChanging("ChapterID");
                    _ChapterID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ChapterID");
                    OnChapterIDChanged();
                }
            }
        }
        private global::System.Int32 _ChapterID;
        partial void OnChapterIDChanging(global::System.Int32 value);
        partial void OnChapterIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ChapterName
        {
            get
            {
                return _ChapterName;
            }
            set
            {
                OnChapterNameChanging(value);
                ReportPropertyChanging("ChapterName");
                _ChapterName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ChapterName");
                OnChapterNameChanged();
            }
        }
        private global::System.String _ChapterName;
        partial void OnChapterNameChanging(global::System.String value);
        partial void OnChapterNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubjectID
        {
            get
            {
                return _SubjectID;
            }
            set
            {
                OnSubjectIDChanging(value);
                ReportPropertyChanging("SubjectID");
                _SubjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubjectID");
                OnSubjectIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SubjectID;
        partial void OnSubjectIDChanging(Nullable<global::System.Int32> value);
        partial void OnSubjectIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExamDbModel", "FK_Chapter_Subject", "Subject")]
        public Subject Subject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("ExamDbModel.FK_Chapter_Subject", "Subject").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("ExamDbModel.FK_Chapter_Subject", "Subject").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Subject> SubjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("ExamDbModel.FK_Chapter_Subject", "Subject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Subject>("ExamDbModel.FK_Chapter_Subject", "Subject", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExamDbModel", "FK_Question_Chapter", "Question")]
        public EntityCollection<Question> Questions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Question>("ExamDbModel.FK_Question_Chapter", "Question");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Question>("ExamDbModel.FK_Question_Chapter", "Question", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExamDbModel", Name="ExamMaster")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ExamMaster : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExamMaster object.
        /// </summary>
        /// <param name="examID">Initial value of the ExamID property.</param>
        public static ExamMaster CreateExamMaster(global::System.Int32 examID)
        {
            ExamMaster examMaster = new ExamMaster();
            examMaster.ExamID = examID;
            return examMaster;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ExamID
        {
            get
            {
                return _ExamID;
            }
            set
            {
                if (_ExamID != value)
                {
                    OnExamIDChanging(value);
                    ReportPropertyChanging("ExamID");
                    _ExamID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ExamID");
                    OnExamIDChanged();
                }
            }
        }
        private global::System.Int32 _ExamID;
        partial void OnExamIDChanging(global::System.Int32 value);
        partial void OnExamIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExamDate
        {
            get
            {
                return _ExamDate;
            }
            set
            {
                OnExamDateChanging(value);
                ReportPropertyChanging("ExamDate");
                _ExamDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExamDate");
                OnExamDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExamDate;
        partial void OnExamDateChanging(Nullable<global::System.DateTime> value);
        partial void OnExamDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RegStartDate
        {
            get
            {
                return _RegStartDate;
            }
            set
            {
                OnRegStartDateChanging(value);
                ReportPropertyChanging("RegStartDate");
                _RegStartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegStartDate");
                OnRegStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _RegStartDate;
        partial void OnRegStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnRegStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RegEndDate
        {
            get
            {
                return _RegEndDate;
            }
            set
            {
                OnRegEndDateChanging(value);
                ReportPropertyChanging("RegEndDate");
                _RegEndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegEndDate");
                OnRegEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _RegEndDate;
        partial void OnRegEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnRegEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubjectID
        {
            get
            {
                return _SubjectID;
            }
            set
            {
                OnSubjectIDChanging(value);
                ReportPropertyChanging("SubjectID");
                _SubjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubjectID");
                OnSubjectIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SubjectID;
        partial void OnSubjectIDChanging(Nullable<global::System.Int32> value);
        partial void OnSubjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Duration
        {
            get
            {
                return _Duration;
            }
            set
            {
                OnDurationChanging(value);
                ReportPropertyChanging("Duration");
                _Duration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Duration");
                OnDurationChanged();
            }
        }
        private Nullable<global::System.Int32> _Duration;
        partial void OnDurationChanging(Nullable<global::System.Int32> value);
        partial void OnDurationChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExamDbModel", "FK_ExamMaster_Subject", "Subject")]
        public Subject Subject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("ExamDbModel.FK_ExamMaster_Subject", "Subject").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("ExamDbModel.FK_ExamMaster_Subject", "Subject").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Subject> SubjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("ExamDbModel.FK_ExamMaster_Subject", "Subject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Subject>("ExamDbModel.FK_ExamMaster_Subject", "Subject", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExamDbModel", "FK_ExamRegistration_ExamMaster", "ExamRegistration")]
        public EntityCollection<ExamRegistration> ExamRegistrations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExamRegistration>("ExamDbModel.FK_ExamRegistration_ExamMaster", "ExamRegistration");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExamRegistration>("ExamDbModel.FK_ExamRegistration_ExamMaster", "ExamRegistration", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExamDbModel", Name="ExamRegistration")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ExamRegistration : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExamRegistration object.
        /// </summary>
        /// <param name="regId">Initial value of the RegId property.</param>
        public static ExamRegistration CreateExamRegistration(global::System.Int32 regId)
        {
            ExamRegistration examRegistration = new ExamRegistration();
            examRegistration.RegId = regId;
            return examRegistration;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RegId
        {
            get
            {
                return _RegId;
            }
            set
            {
                if (_RegId != value)
                {
                    OnRegIdChanging(value);
                    ReportPropertyChanging("RegId");
                    _RegId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RegId");
                    OnRegIdChanged();
                }
            }
        }
        private global::System.Int32 _RegId;
        partial void OnRegIdChanging(global::System.Int32 value);
        partial void OnRegIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RegDate
        {
            get
            {
                return _RegDate;
            }
            set
            {
                OnRegDateChanging(value);
                ReportPropertyChanging("RegDate");
                _RegDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegDate");
                OnRegDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _RegDate;
        partial void OnRegDateChanging(Nullable<global::System.DateTime> value);
        partial void OnRegDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ExamID
        {
            get
            {
                return _ExamID;
            }
            set
            {
                OnExamIDChanging(value);
                ReportPropertyChanging("ExamID");
                _ExamID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExamID");
                OnExamIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ExamID;
        partial void OnExamIDChanging(Nullable<global::System.Int32> value);
        partial void OnExamIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExamDbModel", "FK_ExamRegistration_ExamMaster", "ExamMaster")]
        public ExamMaster ExamMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExamMaster>("ExamDbModel.FK_ExamRegistration_ExamMaster", "ExamMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExamMaster>("ExamDbModel.FK_ExamRegistration_ExamMaster", "ExamMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ExamMaster> ExamMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExamMaster>("ExamDbModel.FK_ExamRegistration_ExamMaster", "ExamMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ExamMaster>("ExamDbModel.FK_ExamRegistration_ExamMaster", "ExamMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExamDbModel", "FK_ExamRegistration_ExamRegistration", "Login")]
        public Login Login
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Login>("ExamDbModel.FK_ExamRegistration_ExamRegistration", "Login").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Login>("ExamDbModel.FK_ExamRegistration_ExamRegistration", "Login").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Login> LoginReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Login>("ExamDbModel.FK_ExamRegistration_ExamRegistration", "Login");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Login>("ExamDbModel.FK_ExamRegistration_ExamRegistration", "Login", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExamDbModel", "FK_StudentExamQuestions_ExamRegistration", "StudentExamQuestions")]
        public EntityCollection<StudentExamQuestion> StudentExamQuestions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StudentExamQuestion>("ExamDbModel.FK_StudentExamQuestions_ExamRegistration", "StudentExamQuestions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StudentExamQuestion>("ExamDbModel.FK_StudentExamQuestions_ExamRegistration", "StudentExamQuestions", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExamDbModel", Name="Login")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Login : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Login object.
        /// </summary>
        /// <param name="username">Initial value of the Username property.</param>
        public static Login CreateLogin(global::System.String username)
        {
            Login login = new Login();
            login.Username = username;
            return login;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                if (_Username != value)
                {
                    OnUsernameChanging(value);
                    ReportPropertyChanging("Username");
                    _Username = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Username");
                    OnUsernameChanged();
                }
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Question
        {
            get
            {
                return _Question;
            }
            set
            {
                OnQuestionChanging(value);
                ReportPropertyChanging("Question");
                _Question = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Question");
                OnQuestionChanged();
            }
        }
        private global::System.String _Question;
        partial void OnQuestionChanging(global::System.String value);
        partial void OnQuestionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Answer
        {
            get
            {
                return _Answer;
            }
            set
            {
                OnAnswerChanging(value);
                ReportPropertyChanging("Answer");
                _Answer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Answer");
                OnAnswerChanged();
            }
        }
        private global::System.String _Answer;
        partial void OnAnswerChanging(global::System.String value);
        partial void OnAnswerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Role
        {
            get
            {
                return _Role;
            }
            set
            {
                OnRoleChanging(value);
                ReportPropertyChanging("Role");
                _Role = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Role");
                OnRoleChanged();
            }
        }
        private global::System.String _Role;
        partial void OnRoleChanging(global::System.String value);
        partial void OnRoleChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExamDbModel", "FK_ExamRegistration_ExamRegistration", "ExamRegistration")]
        public EntityCollection<ExamRegistration> ExamRegistrations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExamRegistration>("ExamDbModel.FK_ExamRegistration_ExamRegistration", "ExamRegistration");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExamRegistration>("ExamDbModel.FK_ExamRegistration_ExamRegistration", "ExamRegistration", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExamDbModel", Name="Question")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Question : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Question object.
        /// </summary>
        /// <param name="questionID">Initial value of the QuestionID property.</param>
        public static Question CreateQuestion(global::System.Int32 questionID)
        {
            Question question = new Question();
            question.QuestionID = questionID;
            return question;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuestionID
        {
            get
            {
                return _QuestionID;
            }
            set
            {
                if (_QuestionID != value)
                {
                    OnQuestionIDChanging(value);
                    ReportPropertyChanging("QuestionID");
                    _QuestionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("QuestionID");
                    OnQuestionIDChanged();
                }
            }
        }
        private global::System.Int32 _QuestionID;
        partial void OnQuestionIDChanging(global::System.Int32 value);
        partial void OnQuestionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ChapterID
        {
            get
            {
                return _ChapterID;
            }
            set
            {
                OnChapterIDChanging(value);
                ReportPropertyChanging("ChapterID");
                _ChapterID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChapterID");
                OnChapterIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ChapterID;
        partial void OnChapterIDChanging(Nullable<global::System.Int32> value);
        partial void OnChapterIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String QuestionText
        {
            get
            {
                return _QuestionText;
            }
            set
            {
                OnQuestionTextChanging(value);
                ReportPropertyChanging("QuestionText");
                _QuestionText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("QuestionText");
                OnQuestionTextChanged();
            }
        }
        private global::System.String _QuestionText;
        partial void OnQuestionTextChanging(global::System.String value);
        partial void OnQuestionTextChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExamDbModel", "FK_Question_Chapter", "Chapter")]
        public Chapter Chapter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Chapter>("ExamDbModel.FK_Question_Chapter", "Chapter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Chapter>("ExamDbModel.FK_Question_Chapter", "Chapter").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Chapter> ChapterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Chapter>("ExamDbModel.FK_Question_Chapter", "Chapter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Chapter>("ExamDbModel.FK_Question_Chapter", "Chapter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExamDbModel", "FK_QuestionBlanks_Question", "QuestionBlanks")]
        public QuestionBlank QuestionBlank
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuestionBlank>("ExamDbModel.FK_QuestionBlanks_Question", "QuestionBlanks").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuestionBlank>("ExamDbModel.FK_QuestionBlanks_Question", "QuestionBlanks").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<QuestionBlank> QuestionBlankReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuestionBlank>("ExamDbModel.FK_QuestionBlanks_Question", "QuestionBlanks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<QuestionBlank>("ExamDbModel.FK_QuestionBlanks_Question", "QuestionBlanks", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExamDbModel", "FK_QuestionBool_Question", "QuestionBool")]
        public QuestionBool QuestionBool
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuestionBool>("ExamDbModel.FK_QuestionBool_Question", "QuestionBool").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuestionBool>("ExamDbModel.FK_QuestionBool_Question", "QuestionBool").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<QuestionBool> QuestionBoolReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuestionBool>("ExamDbModel.FK_QuestionBool_Question", "QuestionBool");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<QuestionBool>("ExamDbModel.FK_QuestionBool_Question", "QuestionBool", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExamDbModel", "FK_QuestionMcq_Question", "QuestionMcq")]
        public QuestionMcq QuestionMcq
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuestionMcq>("ExamDbModel.FK_QuestionMcq_Question", "QuestionMcq").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuestionMcq>("ExamDbModel.FK_QuestionMcq_Question", "QuestionMcq").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<QuestionMcq> QuestionMcqReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuestionMcq>("ExamDbModel.FK_QuestionMcq_Question", "QuestionMcq");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<QuestionMcq>("ExamDbModel.FK_QuestionMcq_Question", "QuestionMcq", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExamDbModel", "FK_StudentExamQuestions_Question", "StudentExamQuestions")]
        public EntityCollection<StudentExamQuestion> StudentExamQuestions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StudentExamQuestion>("ExamDbModel.FK_StudentExamQuestions_Question", "StudentExamQuestions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StudentExamQuestion>("ExamDbModel.FK_StudentExamQuestions_Question", "StudentExamQuestions", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExamDbModel", Name="QuestionBlank")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class QuestionBlank : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new QuestionBlank object.
        /// </summary>
        /// <param name="questionID">Initial value of the QuestionID property.</param>
        public static QuestionBlank CreateQuestionBlank(global::System.Int32 questionID)
        {
            QuestionBlank questionBlank = new QuestionBlank();
            questionBlank.QuestionID = questionID;
            return questionBlank;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuestionID
        {
            get
            {
                return _QuestionID;
            }
            set
            {
                if (_QuestionID != value)
                {
                    OnQuestionIDChanging(value);
                    ReportPropertyChanging("QuestionID");
                    _QuestionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("QuestionID");
                    OnQuestionIDChanged();
                }
            }
        }
        private global::System.Int32 _QuestionID;
        partial void OnQuestionIDChanging(global::System.Int32 value);
        partial void OnQuestionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CorrectAnswer
        {
            get
            {
                return _CorrectAnswer;
            }
            set
            {
                OnCorrectAnswerChanging(value);
                ReportPropertyChanging("CorrectAnswer");
                _CorrectAnswer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CorrectAnswer");
                OnCorrectAnswerChanged();
            }
        }
        private global::System.String _CorrectAnswer;
        partial void OnCorrectAnswerChanging(global::System.String value);
        partial void OnCorrectAnswerChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExamDbModel", "FK_QuestionBlanks_Question", "Question")]
        public Question Question
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("ExamDbModel.FK_QuestionBlanks_Question", "Question").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("ExamDbModel.FK_QuestionBlanks_Question", "Question").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Question> QuestionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("ExamDbModel.FK_QuestionBlanks_Question", "Question");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Question>("ExamDbModel.FK_QuestionBlanks_Question", "Question", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExamDbModel", Name="QuestionBool")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class QuestionBool : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new QuestionBool object.
        /// </summary>
        /// <param name="questionID">Initial value of the QuestionID property.</param>
        public static QuestionBool CreateQuestionBool(global::System.Int32 questionID)
        {
            QuestionBool questionBool = new QuestionBool();
            questionBool.QuestionID = questionID;
            return questionBool;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuestionID
        {
            get
            {
                return _QuestionID;
            }
            set
            {
                if (_QuestionID != value)
                {
                    OnQuestionIDChanging(value);
                    ReportPropertyChanging("QuestionID");
                    _QuestionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("QuestionID");
                    OnQuestionIDChanged();
                }
            }
        }
        private global::System.Int32 _QuestionID;
        partial void OnQuestionIDChanging(global::System.Int32 value);
        partial void OnQuestionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Answer1
        {
            get
            {
                return _Answer1;
            }
            set
            {
                OnAnswer1Changing(value);
                ReportPropertyChanging("Answer1");
                _Answer1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Answer1");
                OnAnswer1Changed();
            }
        }
        private global::System.String _Answer1;
        partial void OnAnswer1Changing(global::System.String value);
        partial void OnAnswer1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Answer2
        {
            get
            {
                return _Answer2;
            }
            set
            {
                OnAnswer2Changing(value);
                ReportPropertyChanging("Answer2");
                _Answer2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Answer2");
                OnAnswer2Changed();
            }
        }
        private global::System.String _Answer2;
        partial void OnAnswer2Changing(global::System.String value);
        partial void OnAnswer2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> CorrectAnswer
        {
            get
            {
                return _CorrectAnswer;
            }
            set
            {
                OnCorrectAnswerChanging(value);
                ReportPropertyChanging("CorrectAnswer");
                _CorrectAnswer = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CorrectAnswer");
                OnCorrectAnswerChanged();
            }
        }
        private Nullable<global::System.Boolean> _CorrectAnswer;
        partial void OnCorrectAnswerChanging(Nullable<global::System.Boolean> value);
        partial void OnCorrectAnswerChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExamDbModel", "FK_QuestionBool_Question", "Question")]
        public Question Question
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("ExamDbModel.FK_QuestionBool_Question", "Question").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("ExamDbModel.FK_QuestionBool_Question", "Question").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Question> QuestionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("ExamDbModel.FK_QuestionBool_Question", "Question");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Question>("ExamDbModel.FK_QuestionBool_Question", "Question", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExamDbModel", Name="QuestionMcq")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class QuestionMcq : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new QuestionMcq object.
        /// </summary>
        /// <param name="questionID">Initial value of the QuestionID property.</param>
        public static QuestionMcq CreateQuestionMcq(global::System.Int32 questionID)
        {
            QuestionMcq questionMcq = new QuestionMcq();
            questionMcq.QuestionID = questionID;
            return questionMcq;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuestionID
        {
            get
            {
                return _QuestionID;
            }
            set
            {
                if (_QuestionID != value)
                {
                    OnQuestionIDChanging(value);
                    ReportPropertyChanging("QuestionID");
                    _QuestionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("QuestionID");
                    OnQuestionIDChanged();
                }
            }
        }
        private global::System.Int32 _QuestionID;
        partial void OnQuestionIDChanging(global::System.Int32 value);
        partial void OnQuestionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Answer1
        {
            get
            {
                return _Answer1;
            }
            set
            {
                OnAnswer1Changing(value);
                ReportPropertyChanging("Answer1");
                _Answer1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Answer1");
                OnAnswer1Changed();
            }
        }
        private global::System.String _Answer1;
        partial void OnAnswer1Changing(global::System.String value);
        partial void OnAnswer1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Answer2
        {
            get
            {
                return _Answer2;
            }
            set
            {
                OnAnswer2Changing(value);
                ReportPropertyChanging("Answer2");
                _Answer2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Answer2");
                OnAnswer2Changed();
            }
        }
        private global::System.String _Answer2;
        partial void OnAnswer2Changing(global::System.String value);
        partial void OnAnswer2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Answer3
        {
            get
            {
                return _Answer3;
            }
            set
            {
                OnAnswer3Changing(value);
                ReportPropertyChanging("Answer3");
                _Answer3 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Answer3");
                OnAnswer3Changed();
            }
        }
        private global::System.String _Answer3;
        partial void OnAnswer3Changing(global::System.String value);
        partial void OnAnswer3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Answer4
        {
            get
            {
                return _Answer4;
            }
            set
            {
                OnAnswer4Changing(value);
                ReportPropertyChanging("Answer4");
                _Answer4 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Answer4");
                OnAnswer4Changed();
            }
        }
        private global::System.String _Answer4;
        partial void OnAnswer4Changing(global::System.String value);
        partial void OnAnswer4Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CorrectAnswer
        {
            get
            {
                return _CorrectAnswer;
            }
            set
            {
                OnCorrectAnswerChanging(value);
                ReportPropertyChanging("CorrectAnswer");
                _CorrectAnswer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CorrectAnswer");
                OnCorrectAnswerChanged();
            }
        }
        private global::System.String _CorrectAnswer;
        partial void OnCorrectAnswerChanging(global::System.String value);
        partial void OnCorrectAnswerChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExamDbModel", "FK_QuestionMcq_Question", "Question")]
        public Question Question
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("ExamDbModel.FK_QuestionMcq_Question", "Question").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("ExamDbModel.FK_QuestionMcq_Question", "Question").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Question> QuestionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("ExamDbModel.FK_QuestionMcq_Question", "Question");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Question>("ExamDbModel.FK_QuestionMcq_Question", "Question", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExamDbModel", Name="StudentExamQuestion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StudentExamQuestion : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StudentExamQuestion object.
        /// </summary>
        /// <param name="regId">Initial value of the RegId property.</param>
        /// <param name="questionID">Initial value of the QuestionID property.</param>
        public static StudentExamQuestion CreateStudentExamQuestion(global::System.Int32 regId, global::System.Int32 questionID)
        {
            StudentExamQuestion studentExamQuestion = new StudentExamQuestion();
            studentExamQuestion.RegId = regId;
            studentExamQuestion.QuestionID = questionID;
            return studentExamQuestion;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RegId
        {
            get
            {
                return _RegId;
            }
            set
            {
                if (_RegId != value)
                {
                    OnRegIdChanging(value);
                    ReportPropertyChanging("RegId");
                    _RegId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RegId");
                    OnRegIdChanged();
                }
            }
        }
        private global::System.Int32 _RegId;
        partial void OnRegIdChanging(global::System.Int32 value);
        partial void OnRegIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuestionID
        {
            get
            {
                return _QuestionID;
            }
            set
            {
                if (_QuestionID != value)
                {
                    OnQuestionIDChanging(value);
                    ReportPropertyChanging("QuestionID");
                    _QuestionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("QuestionID");
                    OnQuestionIDChanged();
                }
            }
        }
        private global::System.Int32 _QuestionID;
        partial void OnQuestionIDChanging(global::System.Int32 value);
        partial void OnQuestionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> AnswerBool
        {
            get
            {
                return _AnswerBool;
            }
            set
            {
                OnAnswerBoolChanging(value);
                ReportPropertyChanging("AnswerBool");
                _AnswerBool = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AnswerBool");
                OnAnswerBoolChanged();
            }
        }
        private Nullable<global::System.Boolean> _AnswerBool;
        partial void OnAnswerBoolChanging(Nullable<global::System.Boolean> value);
        partial void OnAnswerBoolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AnswerBlanks
        {
            get
            {
                return _AnswerBlanks;
            }
            set
            {
                OnAnswerBlanksChanging(value);
                ReportPropertyChanging("AnswerBlanks");
                _AnswerBlanks = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AnswerBlanks");
                OnAnswerBlanksChanged();
            }
        }
        private global::System.String _AnswerBlanks;
        partial void OnAnswerBlanksChanging(global::System.String value);
        partial void OnAnswerBlanksChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AnswerMcq
        {
            get
            {
                return _AnswerMcq;
            }
            set
            {
                OnAnswerMcqChanging(value);
                ReportPropertyChanging("AnswerMcq");
                _AnswerMcq = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AnswerMcq");
                OnAnswerMcqChanged();
            }
        }
        private global::System.String _AnswerMcq;
        partial void OnAnswerMcqChanging(global::System.String value);
        partial void OnAnswerMcqChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExamDbModel", "FK_StudentExamQuestions_ExamRegistration", "ExamRegistration")]
        public ExamRegistration ExamRegistration
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExamRegistration>("ExamDbModel.FK_StudentExamQuestions_ExamRegistration", "ExamRegistration").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExamRegistration>("ExamDbModel.FK_StudentExamQuestions_ExamRegistration", "ExamRegistration").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ExamRegistration> ExamRegistrationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExamRegistration>("ExamDbModel.FK_StudentExamQuestions_ExamRegistration", "ExamRegistration");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ExamRegistration>("ExamDbModel.FK_StudentExamQuestions_ExamRegistration", "ExamRegistration", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExamDbModel", "FK_StudentExamQuestions_Question", "Question")]
        public Question Question
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("ExamDbModel.FK_StudentExamQuestions_Question", "Question").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("ExamDbModel.FK_StudentExamQuestions_Question", "Question").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Question> QuestionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("ExamDbModel.FK_StudentExamQuestions_Question", "Question");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Question>("ExamDbModel.FK_StudentExamQuestions_Question", "Question", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExamDbModel", Name="Subject")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Subject : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Subject object.
        /// </summary>
        /// <param name="subjectID">Initial value of the SubjectID property.</param>
        public static Subject CreateSubject(global::System.Int32 subjectID)
        {
            Subject subject = new Subject();
            subject.SubjectID = subjectID;
            return subject;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubjectID
        {
            get
            {
                return _SubjectID;
            }
            set
            {
                if (_SubjectID != value)
                {
                    OnSubjectIDChanging(value);
                    ReportPropertyChanging("SubjectID");
                    _SubjectID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SubjectID");
                    OnSubjectIDChanged();
                }
            }
        }
        private global::System.Int32 _SubjectID;
        partial void OnSubjectIDChanging(global::System.Int32 value);
        partial void OnSubjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SubjectName
        {
            get
            {
                return _SubjectName;
            }
            set
            {
                OnSubjectNameChanging(value);
                ReportPropertyChanging("SubjectName");
                _SubjectName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SubjectName");
                OnSubjectNameChanged();
            }
        }
        private global::System.String _SubjectName;
        partial void OnSubjectNameChanging(global::System.String value);
        partial void OnSubjectNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExamDbModel", "FK_Chapter_Subject", "Chapter")]
        public EntityCollection<Chapter> Chapters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Chapter>("ExamDbModel.FK_Chapter_Subject", "Chapter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Chapter>("ExamDbModel.FK_Chapter_Subject", "Chapter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExamDbModel", "FK_ExamMaster_Subject", "ExamMaster")]
        public EntityCollection<ExamMaster> ExamMasters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExamMaster>("ExamDbModel.FK_ExamMaster_Subject", "ExamMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExamMaster>("ExamDbModel.FK_ExamMaster_Subject", "ExamMaster", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
